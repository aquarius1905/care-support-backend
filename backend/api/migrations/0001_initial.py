# Generated by Django 5.2 on 2025-04-11 08:48

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='施設名')),
                ('email', models.EmailField(max_length=255, verbose_name='メールアドレス')),
                ('representative_last_name', models.CharField(blank=True, max_length=255, verbose_name='担当者姓')),
                ('representative_first_name', models.CharField(blank=True, max_length=255, verbose_name='担当者名')),
                ('tel', models.CharField(max_length=20, unique=True, verbose_name='連絡先')),
                ('zip', models.CharField(max_length=8, verbose_name='郵便番号')),
                ('address1', models.CharField(max_length=255, verbose_name='住所')),
                ('address2', models.CharField(blank=True, max_length=255, verbose_name='建物名等')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='削除日時')),
            ],
            options={
                'verbose_name': 'サービス事業所',
                'verbose_name_plural': 'サービス事業所一覧',
                'db_table': 'facilities',
            },
        ),
        migrations.CreateModel(
            name='BaseUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('staff', '施設スタッフ'), ('client', '利用者'), ('family', '家族')], max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ClientUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_name', models.CharField(blank=True, max_length=255, verbose_name='姓')),
                ('first_name', models.CharField(blank=True, max_length=255, verbose_name='名')),
                ('last_name_furigana', models.CharField(blank=True, max_length=255, verbose_name='セイ')),
                ('first_name_furigana', models.CharField(blank=True, max_length=255, verbose_name='メイ')),
                ('birthday', models.DateField(default='1950-01-01', verbose_name='生年月日')),
                ('email', models.EmailField(blank=True, max_length=255, null=True, verbose_name='メールアドレス')),
                ('tel', models.CharField(max_length=20, unique=True, verbose_name='電話番号')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='削除日時')),
                ('facility', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.facility', verbose_name='施設')),
            ],
            options={
                'verbose_name': '利用者',
                'verbose_name_plural': '利用者一覧',
                'db_table': 'client_users',
            },
        ),
        migrations.CreateModel(
            name='Guardian',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='名前')),
                ('email', models.EmailField(blank=True, max_length=255, null=True, verbose_name='メールアドレス')),
                ('tel', models.CharField(max_length=20, unique=True, verbose_name='連絡先')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='削除日時')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='guardians', to='api.clientuser', verbose_name='利用者')),
            ],
            options={
                'verbose_name': '利用者の家族',
                'verbose_name_plural': '利用者の家族一覧',
                'db_table': 'guardians',
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='名前')),
                ('email', models.EmailField(blank=True, max_length=255, null=True, verbose_name='メールアドレス')),
                ('tel', models.CharField(max_length=20, unique=True, verbose_name='連絡先')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='削除日時')),
                ('facility', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.facility', verbose_name='施設')),
            ],
            options={
                'verbose_name': 'デイサービス等の職員',
                'verbose_name_plural': 'デイサービス等の職員一覧',
                'db_table': 'staffs',
            },
        ),
        migrations.CreateModel(
            name='TransportSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheduled_transport_datetime', models.DateTimeField(verbose_name='送迎予定時間')),
                ('actual_transport_datetime', models.DateTimeField(blank=True, null=True, verbose_name='変更後の送迎予定時間')),
                ('status', models.IntegerField(choices=[(1, 'Scheduled'), (2, 'Completed'), (3, 'Cancelled')], default=1, verbose_name='ステータス')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='削除日時')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transport_schedules', to='api.clientuser', verbose_name='利用者')),
            ],
            options={
                'verbose_name': '送迎スケジュール',
                'verbose_name_plural': '送迎スケジュール一覧',
                'db_table': 'transport_schedules',
                'unique_together': {('user', 'scheduled_transport_datetime')},
            },
        ),
    ]
